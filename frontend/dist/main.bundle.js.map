{"version":3,"sources":["C:/users/andrew.dickinson/docker/Messageboard/frontend/src/$_lazy_route_resource lazy","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/app.component.css","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/app.component.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/app.module.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/auth.service.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/home.component.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/login.component.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/messages.component.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/nav.component.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/new-messages.component.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/register.component.html","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/register.component.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/user.component.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/web.service.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/environments/environment.ts","C:/users/andrew.dickinson/docker/Messageboard/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","import { Component} from '@angular/core';\r\nimport { NavComponent } from './nav.component'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template:\r\n   `\r\n\t  <nav></nav>\r\n\t  <router-outlet></router-outlet>\r\n  `,\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n\t\r\n}\r\n \r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { HttpModule } from '@angular/http'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { RouterModule } from '@angular/router'\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MessagesComponent } from './messages.component';\r\nimport { NewMessagesComponent } from './new-messages.component'\r\nimport { NavComponent } from './nav.component'\r\nimport { HomeComponent } from './home.component'\r\nimport { RegisterComponent } from './register.component'\r\nimport { LoginComponent } from './login.component';\r\nimport { UserComponent } from './user.component'\r\nimport { AngularFireModule } from 'angularfire2'\r\n\r\nimport { WebService } from './web.service'\r\nimport { AuthService } from './auth.service'\r\n\r\n\r\nexport const firebaseConfig ={ \r\n  apiKey: \"AIzaSyDsu8AWNy-nnjvRSTwj0Zy-4qD2xrzDlnQ\",\r\n  authDomain: \"angularchatapp88.firebaseapp.com\",\r\n  databaseURL: \"https://angularchatapp88.firebaseio.com\",\r\n  projectId: \"angularchatapp88\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"335624676943\"\r\n}\r\n\r\nvar routes=[\r\n  {\r\n    path:'',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path:'messages/:user',\r\n    component: MessagesComponent\r\n  },\r\n  {\r\n    path:'message',\r\n    component: MessagesComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path:'login',\r\n    component: LoginComponent\r\n  },\r\n {\r\n    path:'user',\r\n    component: UserComponent\r\n  },\r\n\r\n]\r\n\r\nimport {\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatInputModule,\r\n  MatSnackBarModule,\r\n  MatToolbarModule\r\n}from '@angular/material';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MessagesComponent,\r\n    NewMessagesComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    UserComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n\t\tMatInputModule,\r\n\t  MatSnackBarModule,\r\n\t  MatToolbarModule,\r\n    HttpModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    AngularFireModule.initializeApp(firebaseConfig)\r\n  ],\r\n  providers: [WebService, AuthService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/app.module.ts","import { Injectable } from '@angular/core'\r\nimport { Http, Headers, RequestOptions } from '@angular/http'\r\nimport { Router } from '@angular/router'\r\nimport { MatSnackBar } from '@angular/material'\r\n\r\n@Injectable()\r\nexport class AuthService{\r\n\tBASE_URL ='http://localhost:63145/auth'\r\n\t//BASE_URL=\r\n\tNAME_KEY ='name'\r\n\tTOKEN_KEY ='token'\r\n\r\n\tconstructor(private http:Http, private router:Router,  private sb: MatSnackBar,){\t}\r\n\r\n\r\n\tget name(){\r\n\t\treturn localStorage.getItem(this.NAME_KEY);\r\n\t}\r\n\t\r\n\tget isAuthenticated(){\r\n\t\treturn !!localStorage.getItem(this.TOKEN_KEY);\r\n\t}\r\n\t\r\n\tget tokenHeader(){\r\n\t\tvar header = new Headers({'Authorization':'Bearer ' + localStorage.getItem(this.TOKEN_KEY)});\r\n\t\tconsole.log(\"header\",header)\r\n\t\t\r\n\t\treturn new RequestOptions({headers:header})\r\n\t}\r\n\r\n\r\n\tlogin(loginData){\r\n\t\ttry{\r\n\t\t\tthis.http.post(this.BASE_URL +'/login', loginData).subscribe(res =>{\r\n\t\t\t\tthis.authenticate(res)\r\n\t\t\t})\r\n\t\t}\r\n\t\tcatch{\r\n\t\t\tthis.handleError(\"User and Password do not match\")\r\n\t\t}\r\n\t}\r\n\r\n\tregister(user){\r\n\t\ttry{\r\n\t\t\tdelete user.comfirmPassword\r\n\t\t\tthis.http.post(this.BASE_URL +'/register', user).subscribe(res =>{\r\n\t\t\t\tthis.authenticate(res)\r\n\t\t\t})\r\n\t\t}\r\n\t\tcatch{\r\n\t\t\tthis.handleError(\"This user already exists\")\r\n\t\t}\r\n\t}\r\n\r\n\tlogout(){\r\n\t\tlocalStorage.removeItem(this.TOKEN_KEY)\r\n\t\tlocalStorage.removeItem(this.NAME_KEY)\r\n\t}\r\n\r\n\tauthenticate(res){\r\n\t\tconsole.log(res)\r\n\t\tvar authResponse =res.json()\r\n\t\tif(!authResponse.token)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tlocalStorage.setItem(this.TOKEN_KEY, res.json().token)\r\n\t\tlocalStorage.setItem(this.NAME_KEY, res.json().firstName)\r\n\t\tthis.router.navigate[('/')]\r\n\t}\r\n\tprivate handleError(error){\r\n\t\tconsole.error(error);\r\n\t\tthis.sb.open(error, \"close\",{duration:5000})\r\n\t}\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/auth.service.ts","import { Component} from '@angular/core';\r\nimport { MessagesComponent } from './messages.component'\r\nimport { NewMessagesComponent } from './new-messages.component';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  template: `\r\n\t  <new-messages ></new-messages>\r\n\t  <messages></messages>\r\n  `,\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class HomeComponent {\r\n\t\r\n}\r\n \r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/home.component.ts","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service'\r\n\r\n@Component({\r\n  selector: 'login',\r\n  template: `\r\n  \t<mat-card>\r\n      <form (ngSubmit)=\"login()\">\r\n        <mat-form-field >\r\n          <input style=\"width:350px\" [(ngModel)]=\"loginData.email\" type='email' matInput placeholder=\"Email\" [ngModelOptions]=\"{standalone: true}\" >\r\n        </mat-form-field >\r\n        <mat-form-field >\r\n          <input style=\"width:350px\" [(ngModel)]=\"loginData.password\" type='password' matInput placeholder=\"Password\" [ngModelOptions]=\"{standalone: true}\" >\r\n        </mat-form-field >\r\n        \r\n        <button mat-raised-button color=\"primary\">Login</button>\r\n      </form>\r\n    </mat-card>\r\n\r\n  `,\r\n})\r\nexport class LoginComponent {\r\n  constructor(private auth: AuthService){}\r\n  loginData={\r\n    \"email\":'',\r\n    \"password\":''\r\n  }\r\n  login(){\r\n    this.auth.login(this.loginData)\r\n  }\r\n} \n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/login.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { WebService } from \"./web.service\"\r\nimport { ActivatedRoute } from \"@angular/router\"\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'messages',\r\n  template: `\r\n  \t<div *ngFor=\"let message of webService.messages | async \">\r\n      <mat-card *ngIf=\"!message\" class=\"card\">\r\n        <mat-card-title >No Messages found for that user</mat-card-title>\r\n        <mat-card-content> </mat-card-content>\r\n      </mat-card>\r\n  \t\t\r\n      <mat-card class=\"card\">\r\n  \t\t  <mat-card-title [routerLink]=\"['/messages/', message.user]\" style=\"cursor:pointer\"> {{message.user}} <div class=\"date\">{{message.created | date : \"medium\" }}</div></mat-card-title>\r\n  \t\t  <mat-card-content> {{message.text}} </mat-card-content>\r\n  \t\t</mat-card>\r\n  \t</div>\r\n  `,\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor(public webService: WebService, private route: ActivatedRoute){}\r\n\r\n\r\n\r\n  ngOnInit(){\r\n    var name =this.route.snapshot.params.user;\r\n  \r\n    (name)? this.webService.getMessages(name) : this.webService.getAllMessages();\r\n    this.webService.getUser().subscribe();\r\n  \r\n    \r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/messages.component.ts","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service'\r\n\r\n@Component({\r\n  selector: 'nav',\r\n  template: `\r\n  \t<mat-toolbar color=\"primary\">\r\n    \t<button mat-button routerLink=\"/\"> Message Board</button>\r\n    \t<button mat-button routerLink=\"/message\">Message</button>\r\n    \t<span style=\"flex: 1 1 auto\"></span>\r\n    \t<button *ngIf=\"!auth.isAuthenticated\" mat-button routerLink=\"/login\">Login</button>\r\n    \t<button *ngIf=\"!auth.isAuthenticated\" mat-button routerLink=\"/register\">Register</button>\r\n    \t<button *ngIf=\"auth.isAuthenticated\" mat-button routerLink=\"/\"> Welcome {{auth.name}} </button>\r\n    \t<button *ngIf=\"auth.isAuthenticated\" mat-button (click)=\"auth.logout()\">Log out</button>\r\n    </mat-toolbar>\r\n  `,\r\n})\r\nexport class NavComponent {\r\n  constructor(private auth: AuthService){}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/nav.component.ts","import { Output, Component } from '@angular/core';\r\nimport { WebService } from \"./web.service\"\r\nimport { AuthService } from './auth.service'\r\nimport { Router } from \"@angular/router\"\r\n@Component({\r\n  selector: 'new-messages',\r\n  template: `\r\n    <mat-card class=\"card\"  >\r\n    <mat-card-content>\r\n      <mat-form-field >\r\n        <input [(ngModel)]=\"message.user\" matInput placeholder=\"Name\" >\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"commentbox\">\r\n        <textarea matInput  [(ngModel)]=\"message.text\" placeholder=\"Leave a comment\" ></textarea>\r\n      </mat-form-field>\r\n      <button (click)=\"post()\" color=\"primary\" mat-button>\r\n        POST\r\n      </button>\r\n     </mat-card-content>\r\n  </mat-card>\r\n\r\n  `,\r\n})\r\nexport class NewMessagesComponent  {\r\n  constructor(private webService: WebService, private auth: AuthService, private router: Router){}\r\n\r\n\r\n\r\n  message={\r\n    user:this.auth.name,\r\n    text:\"\"\r\n  }\r\n  post(){\r\n    this.webService.postMessage(this.message)\r\n    setTimeout(function(){\r\n       this.router.navigate([''])\r\n    }, 2000);\r\n    \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/new-messages.component.ts","module.exports = \"<mat-card>\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <mat-form-field >\\r\\n      <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error':isValid('firstName')}\\\" matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" >\\r\\n    </mat-form-field >\\r\\n    <mat-form-field >\\r\\n      <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error':isValid('lastName')}\\\"  matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\">\\r\\n    </mat-form-field >\\r\\n    <mat-form-field >\\r\\n      <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error':isValid('email')}\\\"  matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n    </mat-form-field >\\r\\n    <mat-form-field >\\r\\n      <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error':isValid('password')}\\\"  matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\r\\n    </mat-form-field >\\r\\n    <mat-form-field >\\r\\n      <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error':isValid('comfirmPassword')}\\\"  matInput type=\\\"password\\\" placeholder=\\\" Comfirm Password\\\" formControlName=\\\"comfirmPassword\\\">\\r\\n    </mat-form-field >\\r\\n    <br>\\r\\n    <span *ngIf=\\\"form.errors?.mismatchedFields\\\">Passwords do not match</span>\\r\\n    <br>\\r\\n    <button mat-raised-button color=\\\"primary\\\">Register</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/register.component.html\n// module id = ../../../../../src/app/register.component.html\n// module chunks = main","import { Component} from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms'\r\nimport { AuthService } from './auth.service'\r\n\r\n@Component({\r\n  selector: 'resgister',\r\n  templateUrl:'register.component.html',\r\n  styles:[ `\r\n    .error{ background-color:#fff0f0}\r\n\r\n  `]\r\n})\r\n\r\nexport class RegisterComponent {\r\n  form;\r\n  constructor(private fb: FormBuilder, private auth: AuthService){\r\n    this.form = fb.group({\r\n      firstName:['',Validators.required],\r\n      lastName:['',Validators.required],\r\n      email:['',[Validators.required, emailValid()]],\r\n      password:['',Validators.required],\r\n      comfirmPassword:['',Validators.required]\r\n    },{validator:matchingFields('password','comfirmPassword')})\r\n  }\r\n\r\n  onSubmit(){\r\n    this.auth.register(this.form.value)\r\n  }\r\n  isValid(control){\r\n    return this.form.controls[control].invalid && this.form.controls[control].touched\r\n  }\r\n}\r\nfunction matchingFields(field1, field2){\r\n  return form =>{\r\n    if(form.controls[field1].value!== form.controls[field2].value)\r\n      return {mismatchedFields:true}\r\n  }\r\n}\r\nfunction emailValid(){\r\n  return control =>{\r\n    var regex =/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    return regex.test(control.value) ? null : {invalidEmail:true}\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/register.component.ts","import {Output, Component} from '@angular/core';\r\nimport {WebService} from \"./web.service\"\r\n@Component({\r\n  selector: 'user',\r\n  template: `\r\n    <mat-card class=\"card\"  >\r\n    <mat-card-content>\r\n      <mat-form-field >\r\n        <input [(ngModel)]=\"model.firstName\" matInput placeholder=\"First Name\" >\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"commentbox\">\r\n        <input [(ngModel)]=\"model.lastName\" matInput placeholder=\"last Name\" >\r\n      </mat-form-field>\r\n      <button (click)=\"post()\" color=\"primary\" mat-raised-button>\r\n        Save Changes\r\n      </button>\r\n     </mat-card-content>\r\n  </mat-card>\r\n\r\n  `,\r\n})\r\nexport class UserComponent  {\r\n  constructor(private webService: WebService){}\r\n  model={\r\n    firstName:\"\",\r\n    lastName:\"\"\r\n  }\r\n  ngOnInit(){\r\n    this.webService.getUser().subscribe(res=>{\r\n      \r\n      this.model.firstName = res.firstName\r\n      this.model.lastName= res.lastName\r\n    })\r\n  }\r\n\r\n  post(){\r\n    this.webService.saveUser(this.model).subscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/user.component.ts","import { Http, Headers, RequestOptions } from '@angular/http'\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core'\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { MatSnackBar } from '@angular/material'\r\nimport { AuthService } from './auth.service'\r\n\r\nimport 'rxjs/add/operator/toPromise'\r\nimport 'rxjs/add/operator/map'\r\n\r\n@Injectable()\r\n\r\nexport class WebService{\r\n\tBASE_URL ='http://localhost:63145/api'\r\n\t// BASE_URL =\r\n\r\n\tprivate messageStore=[\r\n\t]\r\n\t\r\n\tprivate messageSubject:BehaviorSubject<any[]>\r\n\r\n\r\n\tmessages:Observable<any[]>\r\n\r\n\tconstructor(private http: Http, private sb: MatSnackBar, private auth : AuthService ){\r\n\t\tthis.messageSubject= <BehaviorSubject<any[]>>new BehaviorSubject([]);\r\n\t\tthis.messages = this.messageSubject.asObservable();\r\n\t\tthis.getAllMessages()\r\n\t}\r\n\tgetAllMessages(){\r\n\t\ttry{\r\n\t\t\tvar response = this.http.get(this.BASE_URL+'/messages').subscribe(response=>{\r\n\t\t\t\tthis.messageStore=response.json()\r\n\t\t\t\tthis.messageSubject.next(this.messageStore)\r\n\t\t\t})\r\n\t\t}catch(error){\r\n\t\t\tthis.handleError(\"Unable to get messages\")\r\n\t\t}\r\n\t}\r\n\t\r\n\t getMessages(user: string){\r\n\t\ttry{\r\n\t\t\tvar user ='/'+ user ;\r\n\t\t\tvar response = this.http.get(this.BASE_URL+'/messages'+user).subscribe(response=>{\r\n\t\t\t\tthis.messageStore=response.json()\r\n\t\t\t\tthis.messageSubject.next(this.messageStore)\r\n\t\t\t})\r\n\t\t}catch(error){\r\n\t\t\tthis.handleError(\"Unable to get messages\")\r\n\t\t}\r\n\t}\r\n\r\n\tpostMessage(message){\r\n\t\ttry{\r\n\t\t\tvar response= this.http.post(this.BASE_URL+'/message',message).subscribe(response=>{\r\n\t\t\t\tthis.messageStore.push(response.json())\r\n\t\t\t\tthis.messageSubject.next(this.messageStore)\r\n\t\t\t})\r\n\t  }catch(error){\r\n\t \t\tthis.handleError(\"Unable to post message\")\r\n\t  }\r\n\t}\r\n\r\n\tgetUser(){\r\n\t\treturn this.http.get(this.BASE_URL+ '/users/me' , this.auth.tokenHeader).map(res=>res.json())\r\n\t}\r\n\tsaveUser(userData){\r\n\t\treturn this.http.post(this.BASE_URL+ '/users/me' , userData, this.auth.tokenHeader).map(res=>res.json())\r\n\t}\r\n\r\n  private handleError(error){\r\n\t\tconsole.error(error);\r\n\t\tthis.sb.open(error, \"close\",{duration:5000})\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/app/web.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/users/andrew.dickinson/docker/Messageboard/frontend/src/main.ts"],"sourceRoot":"webpack:///"}